-- Most of this code is generated by ChatGPT4 using the following prompt.

--[[ 

I want to write a simple nvim util function. Following are the requirements:
- the function take two https://user-images.githubusercontent.com/39233597/110256294-57385c00-7f98-11eb-86e9-9f647bb2a659.mp4 a register name and a template name.
- there is a predefined table of templates with template name as key and a string template which can be interpolated as value. The string template also define the cursor position.
- this function generate the a string from the template string and value in register
- this result is added under the current cursor in current buffer and the cursor should move to cursor position defined in string

--]]

-- it got it almost right and fixed it with some back and forth

local Util = require("lazy.core.util")

local M = {}

M.templates = {
  markdown_link = " [#CUR#](#VAL#)",
}

-- TODO: achieve this through lua snippets

M.insert_from_register = function(register, template_name)
  local template = M.templates[template_name]
  if not template then
    Util.error("Template not found", { title = "Paste Util" })
    return
  end

  local value = vim.fn.getreg(register)
  if not value or value == "" then
    Util.warn("Register is empty", { title = "Paste Util" })
    return
  end

  local snippet = template:gsub("#VAL#", value)

  local cursor_pos = snippet:find("#CUR#")
  snippet = snippet:gsub("#CUR#", "")

  local line, col = unpack(vim.api.nvim_win_get_cursor(0))
  vim.api.nvim_buf_set_text(0, line - 1, col, line - 1, col, { snippet })

  if cursor_pos then
    vim.api.nvim_win_set_cursor(0, { line, col + cursor_pos - 1 })
  end
  vim.cmd("startinsert")
end

return M
